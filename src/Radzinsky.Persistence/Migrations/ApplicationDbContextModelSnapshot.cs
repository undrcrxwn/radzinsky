// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Radzinsky.Persistence;

#nullable disable

namespace Radzinsky.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.Chat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid?>("DefaultRoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DefaultRoleId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.ChatMember", b =>
                {
                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsChatAdministrator")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("ChatId", "UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ChatMembers");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.ChatPortal", b =>
                {
                    b.Property<long>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ChatId"));

                    b.Property<long>("ChatId1")
                        .HasColumnType("bigint");

                    b.Property<int>("MemberCount")
                        .HasColumnType("integer");

                    b.HasKey("ChatId");

                    b.HasIndex("ChatId1");

                    b.ToTable("ChatPortals");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<long?>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.State", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Bio")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.Chat", b =>
                {
                    b.HasOne("Radzinsky.Domain.Models.Entities.Role", "DefaultRole")
                        .WithMany()
                        .HasForeignKey("DefaultRoleId");

                    b.Navigation("DefaultRole");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.ChatMember", b =>
                {
                    b.HasOne("Radzinsky.Domain.Models.Entities.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Radzinsky.Domain.Models.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Radzinsky.Domain.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.ChatPortal", b =>
                {
                    b.HasOne("Radzinsky.Domain.Models.Entities.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.Role", b =>
                {
                    b.HasOne("Radzinsky.Domain.Models.Entities.Chat", null)
                        .WithMany("Roles")
                        .HasForeignKey("ChatId");
                });

            modelBuilder.Entity("Radzinsky.Domain.Models.Entities.Chat", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
